name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint-test-build:
    name: Lint, Type Check, and Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier (format check)
        run: npm run format:check

      - name: Type check (TypeScript)
        run: npm run typecheck

      - name: Build the project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            dist/
            package.json
            pm2.config.js
            ./prisma/

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: lint-test-build
    if: github.ref == 'refs/heads/dev' # Only deploy on dev

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build-output

      - name: Prepare new release folder
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            APP_DIR=~/apps/minipay
            RELEASES_DIR=$APP_DIR/releases
            NEW_RELEASE=$RELEASES_DIR/$(date +%Y%m%d%H%M%S)

            mkdir -p $RELEASES_DIR
            mkdir -p $NEW_RELEASE

      - name: Copy files to new release folder
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "build-output/*"
          target: "/home/${{ secrets.VPS_USER }}/apps/minipay/releases/"

      - name: Activate new release, reload PM2, and cleanup
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            APP_DIR=~/apps/minipay
            RELEASES_DIR=$APP_DIR/releases
            LATEST_RELEASE=$(ls -td $RELEASES_DIR/* | head -1)

            echo "${{ secrets.ENV_CONTENTS }}" > $LATEST_RELEASE/.env
            cd $LATEST_RELEASE
            npm install --omit=dev
            npx prisma generate

            # Update symlink to latest release
            ln -sfn $LATEST_RELEASE $APP_DIR/current

            # Reload with zero downtime
            cd $APP_DIR/current
            pm2 start pm2.config.js || pm2 reload minipay
            pm2 save

            # Cleanup old releases (keep last 3)
            ls -td $RELEASES_DIR/* | tail -n +4 | xargs rm -rf || true
